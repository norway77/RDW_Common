package org.opentestsystem.rdw.archive;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@TestPropertySource(properties = {
        "archive.file.root=file://tmp",
        "archive.aws.bucket=s3://BucketOne",
        "archive.aws.accessKey: AccessKeyOne",
        "archive.cloud.aws.credentials.secretKey: SecretKeyOne",
        "archive.cloud.aws.region.static: us-west-2",
})
public class ArchiveServiceFacadeTest extends  ArchivePropertiesUtils {

    private ArchivePropertiesImpl archiveProperties;

    @Test
    public void testCreateArchiveServiceLocal() {
        archiveProperties = new ArchivePropertiesImpl(getArchiveLocalProperties(), null);
        ArchiveService localArchiveService = new ArchiveServiceFacade().createArchiveService(archiveProperties);
        assertThat(localArchiveService.getRawUri("test").isEmpty()).isFalse() ;
        assertThat(localArchiveService.getRawUri("test").startsWith("file://")).isTrue();
        assertThat(localArchiveService.getRawUri("test").contains("test")).isTrue();
    }

    @Test
    public void testCreateArchiveServiceS3() {
        archiveProperties = new ArchivePropertiesImpl(null, getArchiveAwsProperties());
        ArchiveService localArchiveService = new ArchiveServiceFacade().createArchiveService(archiveProperties);
        assertThat(localArchiveService.getRawUri("test").isEmpty()).isFalse() ;
        assertThat(localArchiveService.getRawUri("test").startsWith("s3://")).isTrue();
        assertThat(localArchiveService.getRawUri("test").contains("test")).isTrue();
    }

}