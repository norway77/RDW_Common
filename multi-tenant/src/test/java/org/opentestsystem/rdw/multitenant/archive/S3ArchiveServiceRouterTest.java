package org.opentestsystem.rdw.multitenant.archive;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.archive.ArchiveService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.junit4.SpringRunner;

import static org.junit.Assert.assertNotNull;
import static org.assertj.core.api.Assertions.assertThat;

/**
 * Need to fix properties
 */
@RunWith(SpringRunner.class)
@TestPropertySource(properties = {
        "archive.file.root=file://temp",
        "archive.bucket=s3://BucketOne",
        "archive.aws.bucket=s3://BucketOne",
        "archive.aws.object-prefix=tenant_ca",
        "archive.accessKey=AccessKeyOne",
        "archive.cloud.aws.credentials.secretKey=SecretKeyOne",
        "archive.cloud.aws.region.static=us-west-2",
})
public class S3ArchiveServiceRouterTest {

    @Autowired
    S3ArchiveServiceRouter s3ArchiveServiceRouter;


    @Test
    public void testLocalArchiveSerivceCreate() {
        ArchiveService archiveService = s3ArchiveServiceRouter.getLocalArchiveService();
        assertThat(archiveService).isNotNull();
        String rawUri = archiveService.getRawUri("test");
        assertThat(rawUri).isNotNull();
        assertThat(rawUri).isEqualTo("file://tmp/test");

    }

    @Test
    public void tests3ArchiveSerivceCreate() {
        // Need to set what the Id
        ArchiveService archiveService = s3ArchiveServiceRouter.getLocalArchiveService();
        assertNotNull(archiveService);
        assertNotNull(archiveService);
        String rawUri = archiveService.getRawUri("test");
        assertThat(rawUri).isNotNull();
        assertThat(rawUri).isEqualTo("s3://BucketOne/test");
    }

}